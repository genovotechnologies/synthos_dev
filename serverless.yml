# serverless.yml - Full stack deployment
service: synthetic-data-generator

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  environment:
    ANTHROPIC_API_KEY: ${env:ANTHROPIC_API_KEY}
    REDIS_URL: ${env:REDIS_URL}
    S3_BUCKET: ${self:custom.bucketName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

functions:
  upload:
    handler: handlers/upload.handler
    timeout: 300
    memorySize: 1024
    events:
      - http:
          path: /upload
          method: post
          cors: true
    environment:
      S3_BUCKET: ${self:custom.bucketName}
      
  generate:
    handler: handlers/generate.handler
    timeout: 900  # 15 minutes
    memorySize: 3008
    events:
      - http:
          path: /generate
          method: post
          cors: true
    environment:
      ANTHROPIC_API_KEY: ${env:ANTHROPIC_API_KEY}
      REDIS_URL: ${env:REDIS_URL}
      S3_BUCKET: ${self:custom.bucketName}

custom:
  bucketName: synthos-data-${self:provider.stage}-${env:USER, 'default'}

resources:
  Resources:
    SyntheticDataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        LifecycleConfiguration:
          Rules:
            - Status: Enabled
              ExpirationInDays: 30  # Auto-delete after 30 days
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - .git/**
    - .pytest_cache/**
    - tests/** 